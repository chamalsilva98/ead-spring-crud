{"version":3,"sources":["hooks/useLocalStorage.tsx","context/AuthContext.tsx","components/DrawerList.tsx","layout/Layout.tsx","components/AccountModal.tsx","components/AccountTypeToolbar.tsx","components/ConfirmModal.tsx","pages/AccountsTypes.tsx","components/CustomerModal.tsx","components/CustomerToolbar.tsx","pages/Customers.tsx","components/DetailConfirmation.tsx","pages/DashBoard.tsx","pages/SignIn.tsx","components/UserModal.tsx","components/UsersToolbar.tsx","pages/Users.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","defaultValue","useState","saved","localStorage","getItem","JSON","parse","getStorageValue","value","setValue","useEffect","setItem","stringify","AuthContext","createContext","token","setToken","AuthProvider","props","Provider","children","useAuth","useContext","DrawerList","history","useHistory","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Button","onClick","push","autoFocus","Toolbar","Divider","List","ListItem","button","disabled","ListItemAvatar","Avatar","ListItemText","primary","drawerWidth","Layout","location","useLocation","window","mobileOpen","setMobileOpen","title","setTitle","handleDrawerToggle","container","undefined","document","body","pathname","Box","sx","display","AppBar","position","width","sm","ml","IconButton","color","aria-label","edge","mr","Typography","variant","noWrap","component","textAlign","flexGrow","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","p","height","bgcolor","AccountModal","accountName","setAccountName","interestRate","setInterestRate","handleSave","a","isNaN","values","axios","post","response","setRows","rows","data","reset","handleUpdate","selected","put","map","row","update","account","find","toString","TextField","margin","label","fullWidth","onChange","e","target","AccountTypesToolbar","pl","pr","flex","Tooltip","setShow","setUpdate","setSelected","ConfirmModal","action","AccountsTypes","delOpen","setDelOpen","get","delete","filter","Paper","mb","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","border","scope","CustomerModal","firstName","setFirstName","lastName","setLastName","Date","dob","setDob","nic","setNic","phoneNumber","setPhoneNumber","address","setAddress","setAccount","amount","setAmount","accountTypes","setAccountTypes","then","accountValues","customerId","accountId","balance","accounts","accountNumber","marginTop","DesktopDatePicker","inputFormat","newValue","renderInput","params","Autocomplete","disablePortal","options","_","CustomerToolbar","createData","Row","Fragment","borderBottom","size","toDateString","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","accountRow","Customers","Promise","all","customer","responses","index","DetailConfirmation","error","setError","customerDetails","setCustomerDetails","isDeposit","Alert","severity","DialogContentText","DashBoard","setAccountNumber","setIsDeposit","handleSubmit","Container","maxWidth","flexDirection","alignItems","m","mt","required","name","Grid","item","SignIn","username","setUsername","password","setPassword","autoComplete","type","UserModal","privilege","setPrivilege","status","setStatus","joinedOn","user","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","UsersToolbar","Users","forEach","element","console","log","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","theme","createTheme","palette","main","secondary","green","contrastThreshold","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","LocalizationProvider","dateAdapter","AdapterDateFns","getElementById"],"mappings":"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","file":"static/js/main.ca8e930f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction getStorageValue(key: string, defaultValue: any) {\r\n  const saved = localStorage.getItem(key);\r\n  const initial = JSON.parse(saved!);\r\n  return initial || defaultValue;\r\n}\r\n\r\nexport const useLocalStorage = (key: string, defaultValue: any) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { createContext, ReactElement, useContext } from \"react\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\n\r\ninterface AuthContextValue {\r\n  token: string;\r\n  setToken: any;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextValue>({\r\n  token: \"\",\r\n  setToken: () => null,\r\n});\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactElement;\r\n}\r\n\r\nconst AuthProvider = (props: AuthProviderProps) => {\r\n  const [token, setToken] = useLocalStorage(\"token\", \"\");\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider };\r\n\r\nconst useAuth = () => {\r\n  const { token, setToken } = useContext(AuthContext);\r\n\r\n  return { token, setToken };\r\n};\r\n\r\nexport default useAuth;\r\n","import InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Box from \"@mui/system/Box\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useAuth from \"../context/AuthContext\";\r\n\r\nconst DrawerList = () => {\r\n  const history = useHistory();\r\n  const { token, setToken } = useAuth();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const signOut = () => {\r\n    setToken(\"\");\r\n    handleClose();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Confirm sign out?</DialogTitle>\r\n        <DialogContent></DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button onClick={signOut} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => history.push(\"/dashboard\")}\r\n          disabled={token === \"\"}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <InboxIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => history.push(\"/customers\")}\r\n          disabled={token === \"\"}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <InboxIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Customers\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => history.push(\"/accounts\")}\r\n          disabled={token === \"\"}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <InboxIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Account Types\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => history.push(\"/users\")}\r\n          disabled={token !== \"admin\"}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <InboxIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Users\" />\r\n        </ListItem>\r\n        <ListItem button onClick={handleClickOpen} disabled={token === \"\"}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <InboxIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DrawerList;\r\n","import MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { ReactElement, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DrawerList from \"../components/DrawerList\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactElement;\r\n  window?: () => Window;\r\n}\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst Layout = (props: LayoutProps) => {\r\n  const location = useLocation();\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  useEffect(() => {\r\n    let title = \"\";\r\n    switch (location.pathname) {\r\n      case \"/\":\r\n        title = \"Sign In\";\r\n        break;\r\n      case \"/dashboard\":\r\n        title = \"Dashboard\";\r\n        break;\r\n      case \"/customers\":\r\n        title = \"Customers\";\r\n        break;\r\n      case \"/accounts\":\r\n        title = \"Account Types\";\r\n        break;\r\n      case \"/users\":\r\n        title = \"Users\";\r\n        break;\r\n    }\r\n    setTitle(title);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            textAlign=\"center\"\r\n            sx={{ flexGrow: 1 }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          <DrawerList />\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", sm: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          <DrawerList />\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          height: \"100vh\",\r\n          bgcolor: \"grey.100\",\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { Account } from \"../types/types\";\r\n\r\ninterface AccountModalProps {\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  rows: Account[];\r\n  setRows: Dispatch<SetStateAction<Account[]>>;\r\n  selected: number;\r\n  update: boolean;\r\n}\r\n\r\nconst AccountModal = (props: AccountModalProps) => {\r\n  const { open, setOpen } = props;\r\n\r\n  const [accountName, setAccountName] = useState(\"\");\r\n  const [interestRate, setInterestRate] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (isNaN(+interestRate)) return;\r\n    const values: Account = {\r\n      accountName,\r\n      interestRate: +interestRate,\r\n    };\r\n    try {\r\n      const response = await axios.post(\"/account/add\", values);\r\n      props.setRows((rows) => [\r\n        ...rows,\r\n        { ...values, id: response.data as number },\r\n      ]);\r\n      reset();\r\n      handleClose();\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    if (isNaN(+interestRate)) return;\r\n    const values: Account = {\r\n      id: props.selected,\r\n      accountName,\r\n      interestRate: +interestRate,\r\n    };\r\n    try {\r\n      await axios.put(\"/account/update\", values);\r\n      props.setRows((rows) =>\r\n        rows.map((row) => {\r\n          if (row.id === props.selected) return { ...row, ...values };\r\n          else return row;\r\n        })\r\n      );\r\n      handleClose();\r\n    } catch (error) {}\r\n  };\r\n\r\n  const reset = () => {\r\n    setAccountName(\"\");\r\n    setInterestRate(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.update) {\r\n      const account = props.rows.find((row) => row.id === props.selected);\r\n\r\n      setAccountName(account!.accountName);\r\n      setInterestRate(account!.interestRate.toString());\r\n    } else {\r\n      reset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.selected]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>{props.update ? \"Update\" : \"Add\"} Account Type</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"Account Name\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={accountName}\r\n          onChange={(e) => setAccountName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Interest Rate\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={interestRate}\r\n          onChange={(e) => setInterestRate(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        {!props.update ? (\r\n          <Button onClick={handleSave}>Add</Button>\r\n        ) : (\r\n          <Button onClick={handleUpdate}>Update</Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AccountModal;\r\n","import AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\ninterface AccountsToolbarProps {\r\n  setShow: Dispatch<SetStateAction<boolean>>;\r\n  setUpdate: Dispatch<SetStateAction<boolean>>;\r\n  setSelected: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst AccountTypesToolbar = (props: AccountsToolbarProps) => {\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        Account Type Details\r\n      </Typography>\r\n      <Tooltip title=\"Add New Account Type\">\r\n        <IconButton\r\n          onClick={() => {\r\n            props.setShow(true);\r\n            props.setUpdate(false);\r\n            props.setSelected(0);\r\n          }}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default AccountTypesToolbar;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\ninterface ConfirmModalProps {\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  action: () => void;\r\n}\r\n\r\nconst ConfirmModal = (props: ConfirmModalProps) => {\r\n  const { open, setOpen } = props;\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleYes = () => {\r\n    props.action();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        Are you sure you want to delete?\r\n      </DialogTitle>\r\n      <DialogContent></DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>No</Button>\r\n        <Button onClick={handleYes} autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Box from \"@mui/system/Box\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AccountModal from \"../components/AccountModal\";\r\nimport AccountTypesToolbar from \"../components/AccountTypeToolbar\";\r\nimport ConfirmModal from \"../components/ConfirmModal\";\r\nimport { Account } from \"../types/types\";\r\n\r\nconst AccountsTypes = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [delOpen, setDelOpen] = useState(false);\r\n\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const [rows, setRows] = useState<Account[]>([]);\r\n\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get(\"/account/all\");\r\n      setRows(response.data as Account[]);\r\n    })();\r\n  }, []);\r\n\r\n  const deleteAccount = () => {\r\n    axios.delete(\"/account/delete/\" + selected);\r\n    setRows(rows.filter((row) => row.id !== selected));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <AccountModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        rows={rows}\r\n        setRows={setRows}\r\n        selected={selected}\r\n        update={update}\r\n      />\r\n      <ConfirmModal\r\n        open={delOpen}\r\n        setOpen={setDelOpen}\r\n        action={deleteAccount}\r\n      />\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <AccountTypesToolbar\r\n          setShow={setOpen}\r\n          setUpdate={setUpdate}\r\n          setSelected={setSelected}\r\n        />\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"right\">Account Name</TableCell>\r\n                <TableCell align=\"right\">Interest Rate</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.accountName}</TableCell>\r\n                  <TableCell align=\"right\">{row.interestRate}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"Update Account Type\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setUpdate(true);\r\n                          setSelected(row.id as number);\r\n                          setOpen(true);\r\n                        }}\r\n                      >\r\n                        <SaveIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Account Type\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setDelOpen(true);\r\n                          setSelected(row.id as number);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AccountsTypes;\r\n","import DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/system/Box\";\r\nimport axios from \"axios\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { createData } from \"../pages/Customers\";\r\nimport { Account, Customer, CustomerAccount } from \"../types/types\";\r\n\r\ninterface CustomerModalProps {\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  rows: ReturnType<typeof createData>[];\r\n  setRows: Dispatch<SetStateAction<ReturnType<typeof createData>[]>>;\r\n}\r\n\r\nconst CustomerModal = (props: CustomerModalProps) => {\r\n  const { open, setOpen } = props;\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [dob, setDob] = React.useState<Date | null>(new Date());\r\n  const [nic, setNic] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [account, setAccount] = useState<{\r\n    label: string;\r\n    id: number;\r\n  } | null>();\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const [accountTypes, setAccountTypes] = useState([{ label: \"\", id: 0 }]);\r\n\r\n  useEffect(() => {\r\n    axios.get<Account[]>(\"/account/all\").then((response) =>\r\n      setAccountTypes(\r\n        response.data.map((account) => ({\r\n          label: account.accountName,\r\n          id: account.id as number,\r\n        }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const handleChange = (newValue: Date | null) => {\r\n    setDob(newValue);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (\r\n      firstName &&\r\n      lastName &&\r\n      nic &&\r\n      phoneNumber &&\r\n      address &&\r\n      dob &&\r\n      account &&\r\n      amount &&\r\n      !isNaN(+amount)\r\n    ) {\r\n      const values: Customer = {\r\n        firstName,\r\n        lastName,\r\n        nic,\r\n        phoneNumber,\r\n        address,\r\n        dob,\r\n      };\r\n      try {\r\n        const { data } = await axios.post<number>(\"/customer/add\", values);\r\n\r\n        const accountValues: CustomerAccount = {\r\n          customerId: +data,\r\n          accountId: account.id,\r\n          balance: +amount,\r\n        };\r\n        const response = await axios.post(\r\n          \"/customeraccount/add\",\r\n          accountValues\r\n        );\r\n        props.setRows((rows) => [\r\n          ...rows,\r\n          {\r\n            ...values,\r\n            id: accountValues.customerId,\r\n            accounts: [\r\n              { ...accountValues, accountNumber: response.data as number },\r\n            ],\r\n          },\r\n        ]);\r\n        reset();\r\n        handleClose();\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setDob(new Date());\r\n    setNic(\"\");\r\n    setPhoneNumber(\"\");\r\n    setAddress(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Add User</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"First Name\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Last Name\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <Box sx={{ marginTop: \"24px\" }}>\r\n          <DesktopDatePicker\r\n            label=\"Date of Birth\"\r\n            inputFormat=\"MM/dd/yyyy\"\r\n            value={dob}\r\n            onChange={handleChange}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </Box>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"NIC\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={nic}\r\n          onChange={(e) => setNic(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Phone Number\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Address\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n        <Box sx={{ marginTop: \"24px\" }}>\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={accountTypes}\r\n            sx={{ width: 300 }}\r\n            onChange={(_, value) => setAccount(value)}\r\n            renderInput={(params) => <TextField {...params} label=\"Account\" />}\r\n          />\r\n        </Box>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleSave}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomerModal;\r\n","import AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\ninterface CustomerToolbarProps {\r\n  setShow: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst CustomerToolbar = (props: CustomerToolbarProps) => {\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        Customer Details\r\n      </Typography>\r\n      <Tooltip title=\"Add New Customer\">\r\n        <IconButton\r\n          onClick={() => {\r\n            props.setShow(true);\r\n          }}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default CustomerToolbar;\r\n","import KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomerModal from \"../components/CustomerModal\";\r\nimport CustomerToolbar from \"../components/CustomerToolbar\";\r\nimport { Customer, CustomerAccount } from \"../types/types\";\r\n\r\nexport const createData = (\r\n  id: number,\r\n  firstName: string,\r\n  lastName: string,\r\n  dob: Date,\r\n  nic: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  accounts: CustomerAccount[]\r\n) => {\r\n  return {\r\n    id,\r\n    firstName,\r\n    lastName,\r\n    dob,\r\n    nic,\r\n    phoneNumber,\r\n    address,\r\n    accounts,\r\n  };\r\n};\r\n\r\nfunction Row(props: { row: ReturnType<typeof createData> }) {\r\n  const { row } = props;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.id}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.firstName}</TableCell>\r\n        <TableCell align=\"right\">{row.lastName}</TableCell>\r\n        <TableCell align=\"right\">{row.dob.toDateString()}</TableCell>\r\n        <TableCell align=\"right\">{row.nic}</TableCell>\r\n        <TableCell align=\"right\">{row.phoneNumber}</TableCell>\r\n        <TableCell align=\"right\">{row.address}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Accounts\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Account Number</TableCell>\r\n                    <TableCell align=\"right\">Balance</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.accounts.map((accountRow) => (\r\n                    <TableRow key={accountRow.accountNumber}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {accountRow.accountNumber}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{accountRow.balance}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst Customers = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [rows, setRows] = useState([\r\n    createData(0, \"\", \"\", new Date(), \"\", \"\", \"\", [\r\n      { accountId: 0, balance: 0, customerId: 0, accountNumber: 0 },\r\n    ]),\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get<Customer[]>(\"/customer/all\");\r\n\r\n      const responses = await Promise.all(\r\n        response.data.map((customer) =>\r\n          axios.get<CustomerAccount[]>(\r\n            \"/customeraccount/customerid/\" + customer.id\r\n          )\r\n        )\r\n      );\r\n      setRows(\r\n        response.data.map((customer, index) => {\r\n          const { id, firstName, lastName, dob, nic, phoneNumber, address } =\r\n            customer;\r\n          return createData(\r\n            id as number,\r\n            firstName,\r\n            lastName,\r\n            new Date(dob),\r\n            nic,\r\n            phoneNumber,\r\n            address,\r\n            responses[index].data\r\n          );\r\n        })\r\n      );\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <CustomerModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        rows={rows}\r\n        setRows={setRows}\r\n      />\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <CustomerToolbar setShow={setOpen} />\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>Customer ID</TableCell>\r\n                <TableCell align=\"right\">First Name</TableCell>\r\n                <TableCell align=\"right\">Last Name</TableCell>\r\n                <TableCell align=\"right\">Date of Birth</TableCell>\r\n                <TableCell align=\"right\">NIC</TableCell>\r\n                <TableCell align=\"right\">Phone Number</TableCell>\r\n                <TableCell align=\"right\">Address</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import Alert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { Customer, CustomerAccount } from \"../types/types\";\r\n\r\ninterface DetailConfirmationProps {\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  accountNumber: string;\r\n  amount: string;\r\n  isDeposit: boolean;\r\n}\r\n\r\nconst DetailConfirmation = (props: DetailConfirmationProps) => {\r\n  const { open, setOpen } = props;\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [customerDetails, setCustomerDetails] = useState<Customer>({\r\n    address: \"\",\r\n    dob: new Date(),\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    nic: \"\",\r\n    phoneNumber: \"\",\r\n    id: 0,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setError(\"\");\r\n\r\n      (async () => {\r\n        const response = await axios.get<CustomerAccount>(\r\n          \"/customeraccount/get/\" + props.accountNumber\r\n        );\r\n\r\n        if (response.data === null) {\r\n          setError(\"Invalid Account Number\");\r\n          return;\r\n        }\r\n        if (!props.isDeposit && response.data.balance < +props.amount) {\r\n          setError(\"Low Blanace\");\r\n          return;\r\n        }\r\n\r\n        const customer = await axios.get<Customer>(\r\n          \"/customer/get/\" + response.data.customerId\r\n        );\r\n        customer.data.dob = new Date(customer.data.dob);\r\n        setCustomerDetails(customer.data);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [open]);\r\n\r\n  const handleSave = () => {\r\n    axios.put(\"/customeraccount/update\", {\r\n      accountNumber: props.accountNumber,\r\n      balance: props.isDeposit ? +props.amount : -props.amount,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      {error ? (\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      ) : (\r\n        <>\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            Please confirm the details?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>ID </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.id}</Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>First Name </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.firstName}</Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>Last Name </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.lastName}</Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>Date of Birth </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>\r\n                      : {customerDetails.dob.toDateString()}\r\n                    </Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>NIC </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.nic}</Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>Phone Number </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.phoneNumber}</Typography>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Typography>Address </Typography>\r\n                  </td>\r\n                  <td>\r\n                    <Typography>: {customerDetails.address}</Typography>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Reject</Button>\r\n            <Button onClick={handleSave} autoFocus>\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DetailConfirmation;\r\n","import MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport DetailConfirmation from \"../components/DetailConfirmation\";\r\n\r\nconst DashBoard = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [isDeposit, setIsDeposit] = useState(false);\r\n\r\n  const handleSubmit = (isDeposit: boolean) => {\r\n    if (accountNumber && amount) {\r\n      setIsDeposit(isDeposit);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <DetailConfirmation\r\n        open={open}\r\n        setOpen={setOpen}\r\n        accountNumber={accountNumber}\r\n        amount={amount}\r\n        isDeposit={isDeposit}\r\n      />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\r\n          <MonetizationOnIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Welcome User\r\n        </Typography>\r\n        <Box component=\"form\" sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Account Number\"\r\n            name=\"accountNumber\"\r\n            autoFocus\r\n            value={accountNumber}\r\n            onChange={(e) => setAccountNumber(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"amount\"\r\n            label=\"Amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2, bgcolor: \"secondary.dark\" }}\r\n                onClick={() => handleSubmit(true)}\r\n              >\r\n                Deposit\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2, bgcolor: \"secondary.dark\" }}\r\n                onClick={() => handleSubmit(false)}\r\n              >\r\n                Withdraw\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useAuth from \"../context/AuthContext\";\r\n\r\nconst SignIn = () => {\r\n  const history = useHistory();\r\n  const { setToken } = useAuth();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    setError(\"\");\r\n    if (username && password) {\r\n      const { data } = await axios.post(\"/user/authenticate\", {\r\n        username,\r\n        password,\r\n      });\r\n      switch (data) {\r\n        case \"user not found\":\r\n          setError(\"Invalid User\");\r\n          break;\r\n        case \"invalid password\":\r\n          setError(\"Wrong Password\");\r\n          break;\r\n        case \"deactivated\":\r\n          setError(\"You have been deactivated\");\r\n          break;\r\n        case \"admin\":\r\n        case \"normal\":\r\n          setToken(data);\r\n          history.push(\"/dashboard\");\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <Box component=\"form\" sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {error && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { User } from \"../types/types\";\r\n\r\ninterface UserModalProps {\r\n  open: boolean;\r\n  setOpen: Dispatch<SetStateAction<boolean>>;\r\n  rows: User[];\r\n  setRows: Dispatch<SetStateAction<User[]>>;\r\n  selected: number;\r\n  update: boolean;\r\n}\r\n\r\nconst UserModal = (props: UserModalProps) => {\r\n  const { open, setOpen } = props;\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privilege, setPrivilege] = useState(\"normal\");\r\n  const [status, setStatus] = useState(\"active\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const values: User = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password,\r\n      joinedOn: new Date(),\r\n      privilege,\r\n      status: \"active\",\r\n    };\r\n    try {\r\n      const response = await axios.post(\"/user/add\", values);\r\n      props.setRows((rows) => [\r\n        ...rows,\r\n        { ...values, id: response.data as number },\r\n      ]);\r\n      reset();\r\n      handleClose();\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    const user = props.rows.find((row) => row.id === props.selected);\r\n    const values: User = {\r\n      id: props.selected,\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password: password ? password : (user?.password as string),\r\n      joinedOn: user?.joinedOn,\r\n      privilege,\r\n      status,\r\n    };\r\n    try {\r\n      await axios.put(\"/user/update\", values);\r\n      props.setRows((rows) =>\r\n        rows.map((row) => {\r\n          if (row.id === props.selected) return { ...row, ...values };\r\n          else return row;\r\n        })\r\n      );\r\n      handleClose();\r\n    } catch (error) {}\r\n  };\r\n\r\n  const reset = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setPrivilege(\"normal\");\r\n    setStatus(\"active\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.update) {\r\n      const user = props.rows.find((row) => row.id === props.selected);\r\n\r\n      setFirstName(user!.firstName);\r\n      setLastName(user!.lastName);\r\n      setUsername(user!.username);\r\n      setPrivilege(user!.privilege);\r\n      setStatus(user!.status);\r\n    } else {\r\n      reset();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.selected]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>{props.update ? \"Update\" : \"Add\"} User</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"First Name\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Last Name\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <FormControl component=\"fieldset\" sx={{ marginTop: \"8px\" }}>\r\n          <FormLabel component=\"legend\">Privilege</FormLabel>\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"privilege\"\r\n            defaultValue=\"normal\"\r\n            name=\"radio-buttons-group\"\r\n            value={privilege}\r\n            onChange={(e) => setPrivilege(e.target.value)}\r\n          >\r\n            <FormControlLabel\r\n              value=\"normal\"\r\n              control={<Radio />}\r\n              label=\"Normal\"\r\n            />\r\n            <FormControlLabel value=\"admin\" control={<Radio />} label=\"Admin\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <br />\r\n        {props.update && (\r\n          <FormControl component=\"fieldset\" sx={{ marginTop: \"8px\" }}>\r\n            <FormLabel component=\"legend\">Deactivate</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"status\"\r\n              defaultValue=\"active\"\r\n              name=\"radio-buttons-group\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            >\r\n              <FormControlLabel value=\"active\" control={<Radio />} label=\"No\" />\r\n              <FormControlLabel\r\n                value=\"inactive\"\r\n                control={<Radio />}\r\n                label=\"Yes\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        {!props.update ? (\r\n          <Button onClick={handleSave}>Add</Button>\r\n        ) : (\r\n          <Button onClick={handleUpdate}>Update</Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserModal;\r\n","import AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\ninterface UsersToolbarProps {\r\n  setShow: Dispatch<SetStateAction<boolean>>;\r\n  setUpdate: Dispatch<SetStateAction<boolean>>;\r\n  setSelected: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst UsersToolbar = (props: UsersToolbarProps) => {\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        User Details\r\n      </Typography>\r\n      <Tooltip title=\"Add New User\">\r\n        <IconButton\r\n          onClick={() => {\r\n            props.setShow(true);\r\n            props.setUpdate(false);\r\n            props.setSelected(0);\r\n          }}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Box from \"@mui/system/Box\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ConfirmModal from \"../components/ConfirmModal\";\r\nimport UserModal from \"../components/UserModal\";\r\nimport UsersToolbar from \"../components/UsersToolbar\";\r\nimport { User } from \"../types/types\";\r\n\r\nconst Users = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [delOpen, setDelOpen] = useState(false);\r\n\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const [rows, setRows] = useState<User[]>([]);\r\n\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get<User[]>(\"/user/all\");\r\n      response.data.forEach((element) => {\r\n        console.log(\r\n          new Date(element.joinedOn as unknown as string).toDateString()\r\n        );\r\n      });\r\n      setRows(response.data);\r\n    })();\r\n  }, []);\r\n\r\n  const deleteUser = () => {\r\n    axios.delete(\"/user/delete/\" + selected);\r\n    setRows(rows.filter((row) => row.id !== selected));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <UserModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        rows={rows}\r\n        setRows={setRows}\r\n        selected={selected}\r\n        update={update}\r\n      />\r\n      <ConfirmModal open={delOpen} setOpen={setDelOpen} action={deleteUser} />\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <UsersToolbar\r\n          setShow={setOpen}\r\n          setUpdate={setUpdate}\r\n          setSelected={setSelected}\r\n        />\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"right\">First Name</TableCell>\r\n                <TableCell align=\"right\">Last Name</TableCell>\r\n                <TableCell align=\"right\">Joined On</TableCell>\r\n                <TableCell align=\"right\">Privilege</TableCell>\r\n                <TableCell align=\"right\">Activated</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.firstName}</TableCell>\r\n                  <TableCell align=\"right\">{row.lastName}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {new Date(row.joinedOn as unknown as string).toDateString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.privilege}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {row.status === \"active\" ? (\r\n                      <CheckCircleOutlineIcon />\r\n                    ) : (\r\n                      <BlockIcon />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"Update User\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setUpdate(true);\r\n                          setSelected(row.id as number);\r\n                          setOpen(true);\r\n                        }}\r\n                      >\r\n                        <SaveIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete User\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setDelOpen(true);\r\n                          setSelected(row.id as number);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\nimport AccountsTypes from \"./pages/AccountsTypes\";\nimport Customers from \"./pages/Customers\";\nimport DashBoard from \"./pages/DashBoard\";\nimport SignIn from \"./pages/SignIn\";\nimport Users from \"./pages/Users\";\n\nconst App = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <SignIn />\n        </Route>\n        <Route path=\"/dashboard\" exact>\n          <DashBoard />\n        </Route>\n        <Route path=\"/customers\" exact>\n          <Customers />\n        </Route>\n        <Route path=\"/accounts\" exact>\n          <AccountsTypes />\n        </Route>\n        <Route path=\"/users\" exact>\n          <Users />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport green from \"@mui/material/colors/green\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\naxios.defaults.baseURL = \"http://localhost:8080\";\n\nconst theme = createTheme({\n  palette: {\n    primary: { main: \"#FF9800\" },\n    secondary: green,\n    contrastThreshold: 2.15605749486653,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AuthProvider>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Router>\n            <App />\n          </Router>\n        </LocalizationProvider>\n      </AuthProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}